name: S3 Create

on:
  workflow_dispatch: {}

env:
  AWS_REGION: us-west-2

jobs:
  create_bucket:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      issues: write
      pull-requests: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install AWS CLI
      run: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install --update
    - name: Install jq
      run: sudo apt-get install jq

    - name: Configure AWS credentials with GitHub token provider
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ secrets.IAMROLE_GITHUB }}
        role-session-name: GitHub-Action-Role
        aws-region: ${{ env.AWS_REGION }}

    - name: Create S3 bucket with date and time
      run: |
        TIMESTAMP=$(date '+%Y-%m-%d-%H-%M-%S')
        BUCKET_NAME="my-s3-bucket-from-github-action-${TIMESTAMP}"
        aws s3api create-bucket --bucket "${BUCKET_NAME}" --region us-west-2 --create-bucket-configuration LocationConstraint=us-west-2

    - name: Install dependencies
      run: npm install tweetnacl

    - name: Set BUCKET_NAME secret
      uses: actions/github-script@v5
      with:
         github-token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
         script: |
           const bucketName = process.env.BUCKET_NAME;
      
           // Fetch the public key
           const { data: publicKey } = await github.rest.actions.getRepoPublicKey({
             owner: context.repo.owner,
             repo: context.repo.repo,
           });
           
           // Encrypt the secret using the public key
           const nacl = require('tweetnacl');
           const messageBytes = nacl.util.decodeUTF8(bucketName);
           const keyBytes = nacl.util.decodeBase64(publicKey.key);
           const encryptedBytes = nacl.box(messageBytes, new Uint8Array(24), keyBytes);

           // Update the repository secret
           await github.rest.actions.createOrUpdateRepoSecret({
             owner: context.repo.owner,
             repo: context.repo.repo,
             secret_name: 'BUCKET_NAME',
             encrypted_value: nacl.util.encodeBase64(encryptedBytes),
             key_id: publicKey.key_id
             });
